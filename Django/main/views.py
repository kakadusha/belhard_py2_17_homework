"""
–ú–µ—Ç–æ–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—ã–∑–≤–∞–Ω—ã –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
—à–∞–±–ª–æ–Ω –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –æ–ø—Ä–µ–¥ —Å—Å—ã–ª–∫—É –∏—Ç–¥
"""

from django.shortcuts import render
from django.http import HttpResponse
from django.db.models.query import QuerySet
from django.views.generic import ListView, DetailView, CreateView, UpdateView
from django.contrib.auth.decorators import login_required
from django.contrib.auth.mixins import LoginRequiredMixin

from .duck_fox import get_random_duck_and_its_number, get_foxy_urls
from .models import Student


html_config = {"admin": True, "debug": False}


# Create your views here.


# –Ω–∞—à –∫–∞–∫–æ–π —Ç–æ –∏–Ω–¥–µ–∫—Å
def index(request):
    return HttpResponse("<h4>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã</h4><p>HttpResponse()</p>")


def default_page(request):
    return render(
        request,
        "main/default_page.html",
        context={
            "html_config": html_config,
        },
    )


def duck(request):
    (img_url, number) = get_random_duck_and_its_number()
    return render(
        request,
        "main/duck.html",
        context={
            "title": f"—Ä–∞–Ω–¥–æ–º–Ω–∞—è —É—Ç–∫–∞ ‚Ññ{number}",
            "img_url": img_url,
            "number": number,
            "html_config": html_config,
        },
    )


def fox(request, num):
    foxes = get_foxy_urls(num, 100)
    print(foxes)
    return render(
        request,
        "main/fox.html",
        context={
            "title": f"P–∞–Ω–¥–æ–º–Ω–∞—è –ª–∏—Å–∞, {num} —à—Ç—É–∫",
            "foxes": foxes,
            "number": num,
            "html_config": html_config,
        },
    )


def about(request):
    return HttpResponse("<h4>–°—Ç—Ä–∞–Ω–∏—Ü–∞ About</h4>")


def students(request):
    students = Student.objects.all()
    return render(request, "main/students.html", context={"students": students})


# –Ω–∞ —É—Ä–æ–∫–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–ª–∞ —Ç.–∫. —è –±—ã–ª –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ –∞–¥–º–∏–Ω üòÇ
# @login_required(login_url='/login/')
def student(request, id):
    student = Student.objects.get(id=id)
    return render(request, "main/student.html", context={"student": student})


my_menu = [
    {"menu1": "url1"},
    {"menu2": "url2"},
]


class StudentsView(ListView):
    model = Student
    template_name = "main/students.html"
    context_object_name = "students"

    # –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –µ—Å–ª–∏ –Ω–µ—Ç def get
    # def get_queryset(self) -> QuerySet[Any]:
    #     return Student.objects.filter(name='–í–∞—Å—è')

    # –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–æ–ø –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω–µ—Ç def get
    # def get_context_data(self, **kwargs) -> dict[str, Any]:
    #     context =  super().get_context_data(**kwargs)
    #     context['menu'] = menu
    #     return context

    # ---------------------------------------
    # http://127.0.0.1:8000/students2/?f=–∞—Å—è
    def get(self, request, *args, **kwargs):
        f = request.GET.get("f", default="")
        print(f)
        students = Student.objects.filter(name__contains=f).all()
        return render(
            request, self.template_name, context={"students": students, "menu": my_menu}
        )


class StudentView(LoginRequiredMixin, DetailView):
    model = Student
    template_name = "main/student.html"
    slug_url_kwarg = "name_slug"
    context_object_name = "student"
    # pk_url_kwarg = 'pk' # —Ç.–∫. —Ç—É—Ç slug —Å—Å—ã–ª–∫–∞ –ø–æ id —É–∂–µ –Ω–µ –Ω—É–∂–Ω–∞
    login_url = "/login/"


def login(request):
    return HttpResponse("<h1> –õ–û–ì–ò–ù </h1>")
